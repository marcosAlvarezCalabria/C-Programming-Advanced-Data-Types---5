
#include <stdio.h>

struct date {
    int year;
    int month;
    int day;
};

/* function prototypes */
void printDate(struct date);
void readDate(struct date *);
struct date advanceDay(struct date); 

int main(void) {
    struct date today, tomorrow;
    readDate(&today);
    printDate(today);
    tomorrow = advanceDay(today);
    printDate(tomorrow);
    return 0;
}

void readDate(struct date *fecha) {
    scanf("%d %d %d", &(*fecha).year, &(*fecha).month, &(*fecha).day);
}

void printDate(struct date today) {
    printf("%02d/%02d/%d\n", today.month, today.day, today.year);
}

struct date advanceDay(struct date today) {
    // Lógica para avanzar un día
    if (today.month == 12 && today.day == 31) {
        today.month = 1;
        today.day = 1;
        today.year += 1;
    } else if (today.month == 1 && today.day == 31) {
        today.month++;
        today.day = 1; // Reinicia el día
    } else if (today.month == 2 && today.day == 30) { // Febrero tratado como 30 días
        today.day = 1;
        today.month++;
    } else if (today.month == 3 && today.day == 31) {
        today.month++;
        today.day = 1; // Reinicia el día
    } else if (today.month == 5 && today.day == 31) {
        today.month++;
        today.day = 1; // Reinicia el día
    } else if (today.month == 7 && today.day == 31) {
        today.month++;
        today.day = 1; // Reinicia el día
    } else if (today.month == 8 && today.day == 31) {
        today.month++;
        today.day = 1; // Reinicia el día
    } else if (today.month == 10 && today.day == 31) {
        today.month++;
        today.day = 1; // Reinicia el día
    } else if (today.month == 4 || today.month == 6 || today.month == 9 || today.month == 11) {
        if (today.day == 30) {
            today.day = 1;
            today.month++;
        } else {
            today.day++;
        }
    } else {
        today.day++; // Para meses que no sean de 30 o 31 días
    }

    return today;
}
